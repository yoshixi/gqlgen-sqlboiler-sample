// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/yoshixj/gqlgen-sqlboiler-sample/domain"
)

type Connection interface {
	IsConnection()
}

type Edge interface {
	IsEdge()
}

type Noop interface {
	IsNoop()
}

type CreateUserInput struct {
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
}

type Input struct {
	ClientMutationID *string `json:"clientMutationId"`
}

type NewTodo struct {
	Text   string `json:"text"`
	UserID string `json:"userId"`
}

type PageInfo struct {
	StartCursor     string `json:"startCursor"`
	EndCursor       string `json:"endCursor"`
	HasNextPage     bool   `json:"hasNextPage"`
	HasPreviousPage bool   `json:"hasPreviousPage"`
}

type Todo struct {
	ID   string       `json:"id"`
	Text string       `json:"text"`
	Done bool         `json:"done"`
	User *domain.User `json:"user"`
}

type UserConnection struct {
	PageInfo *PageInfo   `json:"pageInfo"`
	Edges    []*UserEdge `json:"edges"`
}

func (UserConnection) IsConnection() {}

type UserEdge struct {
	Cursor string       `json:"cursor"`
	Node   *domain.User `json:"node"`
}

func (UserEdge) IsEdge() {}
